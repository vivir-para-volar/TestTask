@model TestTask.Models.Department


<h3>Удаление отдела</h3>
<hr />

@{
    if (ViewBag.CheckChild)
    {
        <p class="text-danger mt-3">Нельзя удалить отдел, так как за ним закреплены подотделы</p>
    }
    if (ViewBag.CheckEmployees)
    {
        <p class="text-danger mt-3">Нельзя удалить отдел, так как за ним закреплены сотрудники</p>
    }
}

<dl class="mt-4 row">
    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Code)</dt>
    <dd class="col-sm-9">@Html.DisplayFor(model => model.Code)</dd>

    <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Name)</dt>
    <dd class="col-sm-9">@Html.DisplayFor(model => model.Name)</dd>
</dl>

@if (Model.ParentDepartmentID != null)
{
    <h4 class="mt-5">Головной отдел</h4>
    @Html.ActionLink($"{Model.ParentDepartment?.Name} ({Model.ParentDepartment?.Code})", nameof(DepartmentsController.Details), new { id = Model.ParentDepartmentID })
}


<div class="mt-4">
    @if (ViewBag.CheckChild || ViewBag.CheckEmployees)
    {
        @Html.ActionLink("К отделу", nameof(DepartmentsController.Details), new { id = Model.ID }, new { @class = "btn btn-outline-secondary" })
    }
    else
    {
        @using (Html.BeginForm("Delete", "Departments", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.ID)

            <div>
                <input type="submit" value="Удалить" class="btn btn-outline-danger" />
                @Html.ActionLink("К отделу", nameof(DepartmentsController.Details), new { id = Model.ID }, new { @class = "btn btn-outline-secondary ms-2" })
            </div>
        }
    }
</div>

